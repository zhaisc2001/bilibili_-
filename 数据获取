my_headers = [
    "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36",
    "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14",
    "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident/6.0)",
    'Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11',
    'Opera/9.25 (Windows NT 5.1; U; en)',
    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',
    'Mozilla/5.0 (compatible; Konqueror/3.5; Linux) KHTML/3.5.5 (like Gecko) (Kubuntu)',
    'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12',
    'Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9',
    "Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.7 (KHTML, like Gecko) Ubuntu/11.04 Chromium/16.0.912.77 Chrome/16.0.912.77 Safari/535.7",
    "Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0 ",
    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"
]
import requests,random,pandas,json,time,datetime

headers = { "User-Agent": random.choice(my_headers)}
url = 'https://bangumi.bilibili.com/review/web_api/short/list?media_id=8812&folded=0&page_size=20&sort=0'

# 发送get请求
response_comment = requests.get(url,headers = headers)
json_comment = response_comment.text
# print(json_comment)
json_comment = json.loads(json_comment)

total = json_comment['result']['total']
# print(json_comment)#从这里可以看到，必要的'cursor'的值放在了每个评论字典的最后一个字典,而且可以从'total'获取短评的总数
list_a = ['author','score','disliked','likes','liked','ctime','score','content','last_ep_index','cursor']
data = pandas.DataFrame(index = range(total),columns = list_a)#运用pandas创建二维数组


j = 0
while j <total:
    n = len(json_comment['result']['list'])
    for i in range(n):
        data.loc[j,'author'] = json_comment['result']['list'][i]['author']['uname']
        data.loc[j,'score'] = json_comment['result']['list'][i]['user_rating']['score']
        data.loc[j,'disliked'] = json_comment['result']['list'][i]['disliked']
        data.loc[j,'likes'] = json_comment['result']['list'][i]['likes']
        data.loc[j,'liked'] = json_comment['result']['list'][i]['liked']
        data.loc[j,'ctime'] = json_comment['result']['list'][i]['ctime']
        data.loc[j,'content'] = json_comment['result']['list'][i]['content']
        data.loc[j,'cursor'] = json_comment['result']['list'][n-1]['cursor']
        j+= 1
    try:
        data.loc[j,'last_ep_index'] = json_comment['result']['list'][i]['user_season']['last_ep_index']
    except:
        pass

    url1 = url + '&cursor=' + data.loc[j-1,'cursor']
    response_comment = requests.get(url1,headers = headers)
    json_comment = response_comment.text
    json_comment = json.loads(json_comment)

    if j % 50 ==0:
        print('已完成 {}% !'.format(round(j/total*100,2)))
    time.sleep(0.1)



data = data.fillna(0)#填补数组中空值

def getDate(x):
    x = time.gmtime(x)
    return(pandas.Timestamp(datetime.datetime(x[0],x[1],x[2],x[3],x[4],x[5])))

data['date'] = data.ctime.apply(lambda x:getDate(x))

data.to_csv('bilibili_齐神的灾难.csv',index = False)
